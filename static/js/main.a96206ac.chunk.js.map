{"version":3,"sources":["BooksAPI.js","Book.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","Book","_ref","relatedBook","onChangeShelf","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","value","onChange","event","target","disabled","title","authors","loading","show","document","querySelector","removeChild","dot","dotTxt","createTextNode","appendChild","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearch","_this$props$books","currentlyReading","wantToRead","read","shelfBooks","toConsumableArray","map","trim","BooksAPI","searchBooks","alert","searchBook","setState","catch","e","console","log","state","emitChangeDebounced","Debounce","debounce","bind","assertThisInitialized","cancel","_this2","es","to","type","placeholder","src_Book","key","changeShelf","React","Component","BookShelf","onUpdateShelf","relatedShelf","shelfName","App","updateShelf","movedShelf","shelfs","preShelf","newArray","filter","b","push","_this3","_this$state$shelf","exact","path","render","App_BookShelf","src_Search_0","ReactDOM","src_App_0","getElementById"],"mappings":"sSACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,EAAOC,GAAR,OACpBf,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,QAAOC,iBAC7BL,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAM,GAAI,OAAIA,EAAKC,2CCvBRC,EAlBF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,cAAhB,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,QAAA5B,OAAUmB,EAAYU,WAAWV,EAAYU,WAAWC,eAAe,GAAvE,SAC7ET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQQ,MAAOZ,EAAYrB,MAAOkC,SAAU,SAACC,GAAD,OAASb,EAAca,EAAMC,OAAOH,MAAMZ,KACpFE,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,OAAOI,UAAQ,GAA7B,cACAd,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,oBAAd,qBACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,cAAd,gBACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,QAAd,QACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,QAAd,WAINV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcL,EAAYiB,OACzCf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBL,EAAYkB,kBC4E/C,SAASC,EAAQC,GACb,IAAMjC,EAAKkC,SAASC,cAAc,QAElC,IAAIF,EAEA,OADAjC,EAAKoC,YAAYF,SAASC,cAAc,iBACjC,EAGX,IAAME,EAAIH,SAASjB,cAAc,OACjCoB,EAAI1C,GAAG,aACP,IAAM2C,EAAOJ,SAASK,eAAe,OACrCF,EAAIG,YAAYF,GAChBtC,EAAKwC,YAAYH,GAGNI,kBApGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA9C,OAAA+C,EAAA,EAAA/C,CAAAgD,KAAAJ,IACjBE,EAAA9C,OAAAiD,EAAA,EAAAjD,CAAAgD,KAAAhD,OAAAkD,EAAA,EAAAlD,CAAA4C,GAAAO,KAAAH,KAAMH,KAcRO,aAAe,SAAC1C,GAAU,IAAA2C,EACuBP,EAAKD,MAAMhC,MAAlDyC,EADgBD,EAChBC,iBAAkBC,EADFF,EACEE,WAAYC,EADdH,EACcG,KAEpCC,EAAa,GAEf,GAAA5D,OAAAG,OAAA0D,EAAA,EAAA1D,CAAIsD,GAAJtD,OAAA0D,EAAA,EAAA1D,CAAyBuD,GAAzBvD,OAAA0D,EAAA,EAAA1D,CAAwCwD,IAAMG,IAAI,SAACjE,GAAD,OAChD+D,EAAW/D,EAAKI,IAAMJ,EAAKC,QAG1Be,EAAMkD,SACPzB,GAAQ,GACR0B,EAAgBnD,EATI,IAUjBJ,KAAK,SAACwD,GACL,GAAI,UAAWA,EACbC,MAAK,+DAAAlE,OAAgEa,EAAhE,UACA,CACL,IAAMG,EAAQiD,EAAYH,IAAI,SAACK,GAM7B,OALIA,EAAWlE,MAAM2D,EACnBO,EAAWrE,MAAQ8D,EAAWO,EAAWlE,IAEzCkE,EAAWrE,MAAQ,OAEdqE,IAITlB,EAAKjC,MAAMA,EACXiC,EAAKmB,SAAS,CAAEvD,MAAOA,EAAMkD,SAE/BzB,GAAQ,KAET+B,MAAM,SAACC,GACNhC,GAAQ,GACRiC,QAAQC,IAAIF,GACZJ,MAAK,+DA/CXjB,EAAKwB,MAAQ,CACX5D,MAAO,IAIToC,EAAKyB,oBAAsBC,IAASC,SAAS3B,EAAKM,aAAasB,KAAlB1E,OAAA2E,EAAA,EAAA3E,CAAA8C,IAA8B,KAC3EA,EAAKjC,MAAM,GARMiC,sFAYjBE,KAAKuB,oBAAoBK,0CA2ClB,IAAAC,EAAA7B,KAEP,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAMzD,UAAU,eAAe0D,GAAG,KAAlC,SACA7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SACE4D,KAAK,OACLC,YAAY,4BAEZpD,SAAU,SAACsC,GAAD,OAAKU,EAAKN,oBAAoBJ,EAAEpC,OAAOH,YAIvDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACX2B,KAAKnC,MAAM8C,IAAI,SAACjE,EAAKI,GAAN,OACdoB,EAAAC,EAAAC,cAAC8D,EAAD,CACEC,IAAKrF,EACLkB,YAAatB,EACbuB,cAAe4D,EAAKhC,MAAMuC,0BA7ErBC,IAAMC,WCArBC,UAAY,SAAAxE,GAAgD,IAA7CyE,EAA6CzE,EAA7CyE,cAAeC,EAA8B1E,EAA9B0E,aAAcC,EAAgB3E,EAAhB2E,UAChD,OACExE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBqE,GACjCxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXoE,EAAa9B,IAAI,SAACjE,GAAD,OAChBwB,EAAAC,EAAAC,cAAA,MAAI+D,IAAKzF,EAAKI,IACZoB,EAAAC,EAAAC,cAAC8D,EAAD,CAAMlE,YAAatB,EAAMuB,cAAeuE,YAqFvCG,cA3Eb,SAAAA,EAAY9C,GAAO,IAAAC,EAAA,OAAA9C,OAAA+C,EAAA,EAAA/C,CAAAgD,KAAA2C,IACjB7C,EAAA9C,OAAAiD,EAAA,EAAAjD,CAAAgD,KAAAhD,OAAAkD,EAAA,EAAAlD,CAAA2F,GAAAxC,KAAAH,KAAMH,KA2BR+C,YAAc,SAACC,EAAYnG,GACzB,IAAMoG,EAAShD,EAAKwB,MAAM3E,MACxBoG,EAAWrG,EAAKC,MAElB,GAAImG,EAAOC,GAAW,CACpB,IAAMC,EAAWF,EAAOC,GAAUE,OAAO,SAAAC,GAAC,OAAKA,EAAEpG,KAAOJ,EAAKI,KAC7DgG,EAAOC,GAAYC,EAGF,SAAfH,IACFnG,EAAKC,MAAQkG,EACbC,EAAOD,GAAYM,KAAKzG,IAE1BoD,EAAKmB,SAAS,CAAE6B,WAChBjC,EAAgBnE,EAAMmG,IAxCtB/C,EAAKwB,MAAQ,CACX3E,MAAO,CACL2D,iBAAkB,GAClBC,WAAY,GACZC,KAAM,KANOV,mFAWC,IAAA+B,EAAA7B,KACZrD,EAAQ,CACZ2D,iBAAkB,GAClBC,WAAY,GACZC,KAAM,IHpBV5D,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAM,GAAI,OAAIA,EAAKC,QGsBhBP,KAAK,SAACO,GACLA,EAAM8C,IAAI,SAACjE,GAAD,MACO,qBAAfA,EAAKC,MAA+BA,EAAM2D,iBAAiB6C,KAAKzG,GAChD,eAAfA,EAAKC,MAAyBA,EAAM4D,WAAW4C,KAAKzG,GAAQC,EAAM6D,KAAK2C,KAAKzG,KAE/EmF,EAAKZ,SAAS,CAAEtE,6CAqBb,IAAAyG,EAAApD,KAAAqD,EACwCrD,KAAKsB,MAAM3E,MAAlD2D,EADD+C,EACC/C,iBAAkBC,EADnB8C,EACmB9C,WAAYC,EAD/B6C,EAC+B7C,KACtC,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5BtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAACqF,EAAD,CAAWjB,cAAeY,EAAKR,YAAaH,aAAcnC,EAAkBoC,UAAU,sBACtFxE,EAAAC,EAAAC,cAACqF,EAAD,CAAWjB,cAAeY,EAAKR,YAAaH,aAAclC,EAAYmC,UAAU,iBAChFxE,EAAAC,EAAAC,cAACqF,EAAD,CAAWjB,cAAeY,EAAKR,YAAaH,aAAcjC,EAAMkC,UAAU,UAE9ExE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAMC,GAAG,QAAT,mBAKN7D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAOyB,KAAK,OAAOC,OAAQ,kBACvBtF,EAAAC,EAAAC,cAACsF,EAAD,CAAQ7F,MAAOuF,EAAK9B,MAAM3E,MAAOyF,YAAagB,EAAKR,yBAnE7CP,IAAMC,kBClBxBqB,IAASH,OACPtF,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,KAAe5D,EAAAC,EAAAC,cAACwF,EAAD,OACfvE,SAASwE,eAAe","file":"static/js/main.a96206ac.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\n\r\nconst Book = ({ relatedBook, onChangeShelf }) => (\r\n  <div className=\"book\">\r\n    <div className=\"book-top\">\r\n      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url('${relatedBook.imageLinks?relatedBook.imageLinks.smallThumbnail:\"\"}')` }}></div>\r\n      <div className=\"book-shelf-changer\" >\r\n        <select value={relatedBook.shelf} onChange={(event)=>onChangeShelf(event.target.value,relatedBook)}>\r\n          <option value=\"none\" disabled>Move to...</option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div className=\"book-title\">{relatedBook.title}</div>\r\n    <div className=\"book-authors\">{relatedBook.authors}</div>\r\n  </div>\r\n)\r\nexport default Book;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Debounce from 'lodash'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from './Book'\r\nimport './Search.css'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: '',\r\n      // books: []\r\n    };\r\n    // this.handleSearch = ;\r\n    this.emitChangeDebounced = Debounce.debounce(this.handleSearch.bind(this), 1000);\r\n    this.books=[];\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.emitChangeDebounced.cancel();\r\n  }\r\n\r\n  handleSearch = (query) => {\r\n    const { currentlyReading, wantToRead, read } = this.props.books,\r\n      searchResultCount = 15,\r\n      shelfBooks = {};\r\n\r\n    [...currentlyReading, ...wantToRead, ...read].map((book) => (\r\n      shelfBooks[book.id] = book.shelf\r\n    ));\r\n\r\n    if(query.trim()){\r\n      loading(true);\r\n      BooksAPI.search(query, searchResultCount)\r\n        .then((searchBooks) => {\r\n          if ('error' in searchBooks) {\r\n            alert(`sorry, didn't find a book or an author that has the string '${query}'`);\r\n          } else {\r\n            const books = searchBooks.map((searchBook) => {\r\n              if (searchBook.id in shelfBooks) {\r\n                searchBook.shelf = shelfBooks[searchBook.id];\r\n              } else {\r\n                searchBook.shelf = 'none';\r\n              }\r\n              return searchBook;\r\n            })\r\n\r\n            // this.setState({ books })\r\n            this.books=books;\r\n            this.setState({ query: query.trim() });\r\n          }\r\n          loading(false);\r\n        })\r\n        .catch((e) => {\r\n          loading(false);\r\n          console.log(e);\r\n          alert(`Oh no! There was an error making a request for the book`);\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    // const { books } = this.state;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to='/'>Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              // value={query}\r\n              onChange={(e)=>this.emitChangeDebounced(e.target.value)}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {this.books.map((book,id)=>(\r\n              <Book\r\n                key={id}\r\n                relatedBook={book}\r\n                onChangeShelf={this.props.changeShelf}/>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction loading(show) {\r\n    const body=document.querySelector('body')\r\n\r\n    if(!show){\r\n        body.removeChild(document.querySelector('#loadingDot'));\r\n        return false;\r\n    }\r\n\r\n    const dot=document.createElement('DOT')\r\n    dot.id='loadingDot'\r\n    const dotTxt=document.createTextNode(\"...\")\r\n    dot.appendChild(dotTxt)\r\n    body.appendChild(dot)\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Search from './Search'\r\nimport Book from './Book'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nconst BookShelf = ({ onUpdateShelf, relatedShelf, shelfName }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelfName}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {relatedShelf.map((book)=>(\r\n            <li key={book.id}>\r\n              <Book relatedBook={book} onChangeShelf={onUpdateShelf}/>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shelf: {\r\n        currentlyReading: [],\r\n        wantToRead: [],\r\n        read: []\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shelf = {\r\n      currentlyReading: [],\r\n      wantToRead: [],\r\n      read: []\r\n    };\r\n\r\n    BooksAPI.getAll()\r\n      .then((books) => {\r\n        books.map((book) => (\r\n          book.shelf === 'currentlyReading' ? shelf.currentlyReading.push(book) :\r\n          (book.shelf === 'wantToRead' ? shelf.wantToRead.push(book) : shelf.read.push(book))\r\n        ))\r\n        this.setState({ shelf });\r\n      })\r\n  }\r\n\r\n  updateShelf = (movedShelf, book) => {\r\n    const shelfs = this.state.shelf,\r\n      preShelf = book.shelf\r\n\r\n    if (shelfs[preShelf]) {\r\n      const newArray = shelfs[preShelf].filter(b => (b.id !== book.id));\r\n      shelfs[preShelf] = newArray;\r\n    }\r\n\r\n    if (movedShelf !== 'none') {\r\n      book.shelf = movedShelf;\r\n      shelfs[movedShelf].push(book);\r\n    }\r\n    this.setState({ shelfs })\r\n    BooksAPI.update(book, movedShelf)\r\n  }\r\n\r\n  render() {\r\n    const { currentlyReading, wantToRead, read } = this.state.shelf;\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path='/' render={()=>(\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <BookShelf onUpdateShelf={this.updateShelf} relatedShelf={currentlyReading} shelfName='Currently Reading'/>\r\n                <BookShelf onUpdateShelf={this.updateShelf} relatedShelf={wantToRead} shelfName='Want to Read'/>\r\n                <BookShelf onUpdateShelf={this.updateShelf} relatedShelf={read} shelfName='Read'/>\r\n            </div>\r\n            <div className=\"open-search\" >\r\n              <Link to='/add'>Add a book</Link>\r\n            </div>\r\n          </div>\r\n        )}/>\r\n\r\n        <Route path='/add' render={() => (\r\n            <Search books={this.state.shelf} changeShelf={this.updateShelf}/>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}