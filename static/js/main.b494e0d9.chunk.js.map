{"version":3,"sources":["BooksAPI.js","Book.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","Book","_ref","relatedBook","onChangeShelf","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","value","onChange","event","target","disabled","title","authors","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchBook","_this$props$books","currentlyReading","wantToRead","read","shelfBooks","toConsumableArray","map","trim","BooksAPI","searchBooks","alert","setState","catch","e","console","log","state","bind","assertThisInitialized","emitChangeDebounced","Debounce","debounce","cancel","_this2","es","to","type","placeholder","src_Book","key","changeShelf","React","Component","BookShelf","onUpdateShelf","relatedShelf","shelfName","App","updateShelf","movedShelf","shelfs","preShelf","newArray","filter","b","push","_this3","_this$state$shelf","exact","path","render","App_BookShelf","src_Search","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b494e0d9.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query, maxResults })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\n\r\nconst Book = ({ relatedBook, onChangeShelf }) => (\r\n  <div className=\"book\">\r\n    <div className=\"book-top\">\r\n      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url('${relatedBook.imageLinks?relatedBook.imageLinks.smallThumbnail:\"\"}')` }}></div>\r\n      <div className=\"book-shelf-changer\" >\r\n        <select value={relatedBook.shelf} onChange={(event)=>onChangeShelf(event.target.value,relatedBook)}>\r\n          <option value=\"none\" disabled>Move to...</option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    <div className=\"book-title\">{relatedBook.title}</div>\r\n    <div className=\"book-authors\">{relatedBook.authors}</div>\r\n  </div>\r\n)\r\nexport default Book;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Debounce from 'lodash'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Book from './Book'\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // query: '',\r\n      books: []\r\n    };\r\n    this.searchBook = this.searchBook.bind(this);\r\n    this.emitChangeDebounced = Debounce.debounce(this.searchBook, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.emitChangeDebounced.cancel();\r\n  }\r\n\r\n  searchBook = (query) => {\r\n    // this.setState({ query: query.trim() });\r\n\r\n    const { currentlyReading, wantToRead, read } = this.props.books,\r\n      searchResultCount = 15,\r\n      shelfBooks = {};\r\n\r\n    [...currentlyReading, ...wantToRead, ...read].map((book) => (\r\n      shelfBooks[book.id] = book.shelf\r\n    ));\r\n\r\n    if(query.trim())\r\n      BooksAPI.search(query, searchResultCount)\r\n        .then((searchBooks) => {\r\n          if ('error' in searchBooks) {\r\n            alert(`sorry, didn't find a book or an author that has the string '${query}'`);\r\n          } else {\r\n            const books = searchBooks.map((searchBook) => {\r\n              if (searchBook.id in shelfBooks) {\r\n                searchBook.shelf = shelfBooks[searchBook.id];\r\n              } else {\r\n                searchBook.shelf = 'none';\r\n              }\r\n              return searchBook;\r\n            })\r\n\r\n            this.setState({ books })\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          alert(`Oh no! There was an error making a request for the book`);\r\n        });\r\n  }\r\n\r\n  render() {\r\n    const { books } = this.state;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to='/'>Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              // value={query}\r\n              onChange={(e)=>this.emitChangeDebounced(e.target.value)}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {books.map((book,id)=>(\r\n              <Book\r\n                key={id}\r\n                relatedBook={book}\r\n                onChangeShelf={this.props.changeShelf}/>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport Search from './Search'\r\nimport Book from './Book'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nconst BookShelf = ({ onUpdateShelf, relatedShelf, shelfName }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{shelfName}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {relatedShelf.map((book)=>(\r\n            <li key={book.id}>\r\n              <Book relatedBook={book} onChangeShelf={onUpdateShelf}/>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      shelf: {\r\n        currentlyReading: [],\r\n        wantToRead: [],\r\n        read: []\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const shelf = {\r\n      currentlyReading: [],\r\n      wantToRead: [],\r\n      read: []\r\n    };\r\n\r\n    BooksAPI.getAll()\r\n      .then((books) => {\r\n        books.map((book) => (\r\n          book.shelf === 'currentlyReading' ? shelf.currentlyReading.push(book) :\r\n          (book.shelf === 'wantToRead' ? shelf.wantToRead.push(book) : shelf.read.push(book))\r\n        ))\r\n        this.setState({ shelf });\r\n      })\r\n  }\r\n\r\n  updateShelf = (movedShelf, book) => {\r\n    const shelfs = this.state.shelf,\r\n      preShelf = book.shelf\r\n\r\n    if (shelfs[preShelf]) {\r\n      const newArray = shelfs[preShelf].filter(b => (b.id !== book.id));\r\n      shelfs[preShelf] = newArray;\r\n    }\r\n\r\n    if (movedShelf !== 'none') {\r\n      book.shelf = movedShelf;\r\n      shelfs[movedShelf].push(book);\r\n    }\r\n    this.setState({ shelfs })\r\n    BooksAPI.update(book, movedShelf)\r\n  }\r\n\r\n  render() {\r\n    const { currentlyReading, wantToRead, read } = this.state.shelf;\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path='/' render={()=>(\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <BookShelf onUpdateShelf={this.updateShelf} relatedShelf={currentlyReading} shelfName='Currently Reading'/>\r\n                <BookShelf onUpdateShelf={this.updateShelf} relatedShelf={wantToRead} shelfName='Want to Read'/>\r\n                <BookShelf onUpdateShelf={this.updateShelf} relatedShelf={read} shelfName='Read'/>\r\n            </div>\r\n            <div className=\"open-search\" >\r\n              <Link to='/add'>Add a book</Link>\r\n            </div>\r\n          </div>\r\n        )}/>\r\n\r\n        <Route path='/add' render={() => (\r\n            <Search books={this.state.shelf} changeShelf={this.updateShelf}/>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}